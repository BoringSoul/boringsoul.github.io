{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u7b80\u4ecb","text":"<p>\u7528 mkdocs \u751f\u6210\u7684\u7b14\u8bb0</p>"},{"location":"#_2","title":"\u4e3b\u9898","text":"<p>\u8be5\u7b14\u8bb0\u4e3b\u9898\u4e3a mkdocs-material <p></p> <p>\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 <p></p> <pre><code>pip install mkdocs-material\n</code></pre>"},{"location":"#copyright","title":"Copyright","text":"<p>\u9075\u5faa MIT License</p>"},{"location":"middleware/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Kafka/","title":"\u7b14\u8bb0-\u6df1\u5165\u7406\u89e3Kafka\uff1a\u6838\u5fc3\u8bbe\u8ba1\u4e0e\u5b9e\u8df5\u539f\u7406","text":"<p>\u7b80\u5355\u8bb0\u4e0b\u7b14\u8bb0</p>"},{"location":"middleware/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Kafka/#kafka","title":"\u7b2c\u4e00\u7ae0 \u521d\u8bc6Kafka","text":"<p>\u9996\u5148\u77e5\u9053\u4ed6\u662f\u5565\uff1a</p> <ul> <li>\u6d88\u606f\u7cfb\u7edf\uff1a \u5c31\u662f\u4e00\u4e2a\u6d88\u606f\u961f\u5217\u7cfb\u7edf\uff0c\u4f5c\u7528\u65e0\u975e\u5c31\u90a3\u51e0\u4e2a-\u89e3\u8026\uff0c\u524a\u5cf0\u3001\u5f02\u6b65\uff0c\u7136\u540e\u518d\u52a0\u4e0a\u81ea\u5df1\u7684\u96c6\u7fa4\u7279\u6027\uff0c\u505a\u5230\u53ef\u6269\u5c55\u3001\u53ef\u6062\u590d</li> <li>\u6301\u4e45\u5316\uff1a log\u6587\u4ef6\u5b58\u6d88\u606f</li> <li>\u6d41\u5f0f\u5904\u7406\u5e73\u53f0\uff1a\u63d0\u4f9b\u63a5\u53e3\u6765\u505a\u7a97\u53e3\u3001\u8fde\u63a5\u3001\u53d8\u6362\u548c\u805a\u5408\u7b49\u7b49\u7684\u64cd\u4f5c</li> </ul>"},{"location":"middleware/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Kafka/#11","title":"1.1 \u57fa\u672c\u6982\u5ff5","text":"<p>\u770b\u4e0b\u56fe\u5c31\u597d\uff1a</p> <p></p> <ul> <li>Producer : \u751f\u4ea7\u8005</li> <li>Broker : \u5c31\u662f Kafka Server</li> <li>Consumer : \u6d88\u8d39\u8005</li> <li>Message.Topic: \u6d88\u606f\u662f\u6309Topic\u53bb\u5206\u7684</li> <li>Message.Topic.Partition : Topic \u5212\u5206\u4e3a\u4e0d\u540c\u7684\u5206\u533a\u5b58\u50a8\uff0c\u5206\u533a\u7684\u6570\u91cf\u3001\u5206\u914d\u89c4\u5219\uff0c\u80fd\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\uff0c\u540c\u65f6\u8fd8\u80fd\u5728\u8fd0\u884c\u65f6\uff0c\u52a8\u6001\u4fee\u6539\u521b\u5efa\u4e3b\u9898\u65f6\u7684\u5206\u533a\u6570\u91cf\uff08\u53ea\u80fd\u589e\uff0c\u4e0d\u80fd\u51cf\uff09\u3001\u5206\u914d\u89c4\u5219</li> <li>Message.Topic.Partition.Replicas: \u5206\u533a\u65f6\u6709\u526f\u672c\u7684\uff0c\u6bcf\u4e2a\u5206\u533a\u7684\u526f\u672c\u6570\u91cf\uff0c\u5206\u914d\u89c4\u5219\u4e5f\u662f\u8ddf\u4e0a\u9762\u4e00\u6837\uff0c\u53ef\u4ee5\u9759\u6001\u8bbe\u7f6e\uff0c\u52a8\u6001\u4fee\u6539</li> <li>AR( Assigned Replicas ), ISR (In-Sync Replicas), OSR (Out-Sync Replicas) =&gt; AR = ISR + OSR</li> <li>\"Leader Replicas\": \u4e3b\u526f\u672c\uff0c \u8d1f\u8d23\u8bfb\u5199</li> <li>\"Follower Replica\": \u4ece\u526f\u672c\uff0c\u8d1f\u8d23\u8bb0\u5f55\u732a\u526f\u672c\u6570\u636e\uff0c\u6709\u4e00\u5b9a\u6ede\u540e\u6027</li> <li>Message.Topic.Partition.Replica.LEO: \u8be5\u5206\u533a\u4e0b\u4e00\u6761\u6d88\u606f\u5f85\u5199\u5165\u7684 Offset</li> <li>Message.Topic.Partition.Replica.HW: HW - 1 = \u6d88\u8d39\u8005\u80fd\u6d88\u8d39\u5230\u7684\u6700\u5927 Offset</li> <li>Message.Topic.Partition.Log : \u5728\u6301\u4e45\u5316\u5c42\u4e0a\u53ef\u4ee5\u628a\u5206\u533a\u770b\u6210\u4e00\u4e2a\u8ffd\u52a0\u7684 Log \u6587\u4ef6</li> <li>Message.Topic.Partition.Offset : \u6307\u6d88\u606f\u5728\u5206\u533a\u4e2d\u7684\u4e00\u4e2a\u504f\u79fb\u91cf\uff0c\u4e14\u662f\u5206\u533a\u4e2d\u7684\u552f\u4e00\u6807\u8bc6\uff0c\u4e5f\u5c31\u662f Kafka \u662f\u5206\u533a\u5185\u6709\u5e8f\u7684</li> </ul>"},{"location":"middleware/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Kafka/#12","title":"1.2 \u5b89\u88c5\u548c\u914d\u7f6e","text":"<p>3.x \u7248\u672c\u5b89\u88c5\u6bd4\u8f83\u7b80\u5355\uff0cwindows/linux \u7248\u672c\u90fd\u662f\u76f4\u63a5\u4e0b\u4e2a\u5305\uff0c\u5728\u672c\u5730\u8dd1\u811a\u672c\u5c31\u597d\u4e86</p>"},{"location":"middleware/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Kafka/#13","title":"1.3 \u751f\u4ea7\u548c\u6d88\u8d39","text":"<p>\u8fd9\u90e8\u5206\u4ee3\u7801\u5728\u540e\u9762\u7684\u7ae0\u8282\u662f\u4f1a\u8d34\u51fa\u6765\u4e86\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86</p>"},{"location":"middleware/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Kafka/#14","title":"1.4 \u670d\u52a1\u7aef\u53c2\u6570\u914d\u7f6e","text":"<p>\u8fd9\u91cc\u8d34\u51fa\u6700\u5e38\u89c1\u7684\u51e0\u4e2a\u53c2\u6570\u8bf4\u660e\u4e00\u4e0b\uff0c\u914d\u7f6e\u7684\u5185\u5bb9\u90fd\u662f\u5728 config/server.properties \u91cc\u9762\uff0c3.x \u7248\u672c\u7684\u8bdd\uff0c\u5982\u679c\u8981\u7528 kraft \u7684\u8bdd\uff0c\u5219\u770b config/kraft/server.properties \u6587\u4ef6</p> <ul> <li>process.roles : \u8fdb\u7a0b\u7684\u89d2\u8272\u5217\u8868\uff0c\u9017\u53f7\u5206\u5272\uff0c\u9ed8\u8ba4\uff1abroker,controller</li> <li>node.id : \u8282\u70b9 id\uff0c\u7528\u6765\u6807\u8bc6\u8282\u70b9\uff0c\u5728\u65e5\u5fd7\u53ef\u4ee5\u7528\u6765\u6392\u67e5\u95ee\u9898</li> <li>listeners : broker \u76d1\u542c\u5ba2\u6237\u7aef\u7684\u534f\u8bae+\u5730\u5740+\u7aef\u53e3,\u683c\u5f0f\u4e3a : \u534f\u8bae://\u5730\u5740:\u7aef\u53e3\uff0c\u534f\u8bae\u503c\u4e3a\uff1aPLAINTEXT, SSL, SASL_SSL</li> <li>log.dirs : \u6301\u4e45\u5316\u76ee\u5f55\uff0clog.dirs \u4f18\u5148\u7ea7\u5927\u4e8e log.dir</li> </ul>"},{"location":"middleware/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Kafka/#_1","title":"\u7b2c\u4e8c\u7ae0\uff1a\u751f\u4ea7\u8005","text":""},{"location":"middleware/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Kafka/#21","title":"2.1 \u5ba2\u6237\u7aef\u5f00\u53d1","text":"<p>\u8fd9\u91cc\u6211\u5148\u8d34\u6574\u4f53\u7684\u4ee3\u7801\uff0c\u7136\u540e\u518d\u7ec6\u8bf4</p> <pre><code>package org.example;\n\nimport org.apache.kafka.clients.producer.KafkaProducer;\nimport org.apache.kafka.clients.producer.ProducerRecord;\n\nimport java.util.Properties;\n\npublic class KafkaProducerDemo {\n\n    public static final String brokerList = \"localhost:19092,localhost:29092,localhost:39092\";\n    public static final String topic = \"test\";\n\n\n    public static Properties initConfig() {\n        Properties props = new Properties();\n        props.put(\"bootstrap.servers\", brokerList);\n        props.put(\"key.serializer\", \"org.apache.kafka.common.serialization.StringSerializer\");\n        props.put(\"value.serializer\", \"org.apache.kafka.common.serialization.StringSerializer\");\n        props.put(\"client.id\", \"producer.client.id.demo\");\n        return props;\n    }\n\n    public static void main(String[] args) {\n        Properties props = initConfig();\n        try (KafkaProducer&lt;String, String&gt; producer = new KafkaProducer&lt;&gt;(props)) {\n            ProducerRecord&lt;String, String&gt; record = new ProducerRecord&lt;&gt;(topic, \"hello kafka\");\n            producer.send(record);\n        } catch (Exception e) {\n            System.out.println(e.getMessage());\n        }\n\n    }\n}\n</code></pre>"},{"location":"middleware/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Kafka/#211","title":"2.1.1 \u62e6\u622a\u5668","text":"<p>ProducerInterceptor \u63a5\u53e3\u662f\u8fd9\u6837\u7684</p> <pre><code>public interface ProducerInterceptor&lt;K, V&gt; extends Configurable, AutoCloseable {\n    ProducerRecord&lt;K, V&gt; onSend(ProducerRecord&lt;K, V&gt; var1);\n\n    void onAcknowledgement(RecordMetadata var1, Exception var2);\n\n    void close();\n}\n</code></pre> <p>\u62e6\u622a\u5668\u7684\u6ce8\u5165\u65b9\u5f0f\u662f\u8fd9\u6837\u7684\uff0c\u6e90\u7801\u7528\u53cd\u5c04(getDeclaredConstructor().newInstance())\u53bb\u5b9e\u4f8b\u5316\u5bf9\u8c61</p> <pre><code>props.put(ProducerConfig.INTERCEPTOR_CLASSES_CONFIG, KafkaProducerInterceptor.class.getName());\n</code></pre> <p>\u4ee5 kafka-client 3.7.0 \u4e3a\u4f8b</p> <p>onSend \u65b9\u6cd5\u662f\u5728 KafkaProducer \u6e90\u7801 357 \u884c\u6267\u884c\u7684</p> <pre><code>public Future&lt;RecordMetadata&gt; send(ProducerRecord&lt;K, V&gt; record, Callback callback) {\n    ProducerRecord&lt;K, V&gt; interceptedRecord = this.interceptors.onSend(record);\n    return this.doSend(interceptedRecord, callback);\n}\n</code></pre> <p>onAcknoledgement \u5219\u662f\u5728 703 \u884c\u89e6\u53d1\uff0c\u5c31\u662f\u5728 onComplete \u7684\u65f6\u5019\u8c03\u7528</p> <pre><code>public void onCompletion(RecordMetadata metadata, Exception exception) {\n    if (metadata == null) {\n        metadata = new RecordMetadata(this.topicPartition(), -1L, -1, -1L, -1, -1);\n    }\n\n    this.interceptors.onAcknowledgement(metadata, exception);\n    if (this.userCallback != null) {\n        this.userCallback.onCompletion(metadata, exception);\n    }\n\n}\n</code></pre>"},{"location":"middleware/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Kafka/#212","title":"2.1.2 \u5e8f\u5217\u5316\u5668","text":"<p>StringSerializer \u6e90\u7801\u5982\u4e0b</p> <pre><code>package org.apache.kafka.common.serialization;\n\nimport java.io.UnsupportedEncodingException;\nimport java.nio.charset.StandardCharsets;\nimport java.util.Map;\nimport org.apache.kafka.common.errors.SerializationException;\n\npublic class StringSerializer implements Serializer&lt;String&gt; {\n    private String encoding;\n\n    public StringSerializer() {\n        this.encoding = StandardCharsets.UTF_8.name();\n    }\n\n    public void configure(Map&lt;String, ?&gt; configs, boolean isKey) {\n        String propertyName = isKey ? \"key.serializer.encoding\" : \"value.serializer.encoding\";\n        Object encodingValue = configs.get(propertyName);\n        if (encodingValue == null) {\n            encodingValue = configs.get(\"serializer.encoding\");\n        }\n\n        if (encodingValue instanceof String) {\n            this.encoding = (String)encodingValue;\n        }\n\n    }\n\n    public byte[] serialize(String topic, String data) {\n        try {\n            return data == null ? null : data.getBytes(this.encoding);\n        } catch (UnsupportedEncodingException var4) {\n            throw new SerializationException(\"Error when serializing string to byte[] due to unsupported encoding \" + this.encoding);\n        }\n    }\n}\n</code></pre> <p>\u6ca1\u5565\u7279\u522b\uff0c\u5c31\u662f serialize \u91cc\u8fd4\u56de\u4e86 string.getBytes() \u81ea\u5b9a\u4e49\u7684\u4e5f\u662f\u4e00\u6837\uff0c\u8fd4\u56de byte[] \u5c31\u597d\uff0c\u53cd\u5e8f\u5217\u5316\u9053\u7406\u4e00\u6837</p>"},{"location":"middleware/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Kafka/#213","title":"2.1.3 \u5206\u533a\u5668","text":"<p>\u5148\u770b\u770b\u6e90\u7801\u5b9a\u4e49</p> <pre><code>package org.apache.kafka.clients.producer;\n\nimport java.io.Closeable;\nimport org.apache.kafka.common.Cluster;\nimport org.apache.kafka.common.Configurable;\n\npublic interface Partitioner extends Configurable, Closeable {\n    int partition(String topic, Object key, byte[] keyBytes, Object value, byte[] valueBytes, Cluster cluster);\n\n    void close();\n\n    /** @deprecated */\n    @Deprecated\n    default void onNewBatch(String topic, Cluster cluster, int prevPartition) {\n    }\n}\n</code></pre> <p>\u9ed8\u8ba4\u5206\u533a\u5668 DefaultPartioner \u6e90\u7801\u662f\u8fd9\u6837\u7684</p> <pre><code>public int partition(String topic, Object key, byte[] keyBytes, Object value, byte[] valueBytes, Cluster cluster, int numPartitions) {\n    return keyBytes == null ? this.stickyPartitionCache.partition(topic, cluster) : BuiltInPartitioner.partitionForKey(keyBytes, numPartitions);\n}\n</code></pre> <p>\u4e3b\u8981\u770bkey\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u7a7a\u7684\u8bdd\u8c03\u7528 stickyPartitionCache.partition\uff0c \u968f\u673a\u4e00\u4e2a\u53ef\u7528\u7684\u5206\u533a\u6765\u5199\u5165 <p> \u975e\u7a7a\u5c31\u7528\u5185\u7f6e\u5206\u533a\u5668\uff0c\u5148\u7528 Utils.murmur2 \u6765 hash\uff0c \u6700\u540e % numPartitions</p>"},{"location":"middleware/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Kafka/#22","title":"2.2 \u539f\u7406\u5206\u6790","text":""},{"location":"middleware/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Kafka/#221","title":"2.2.1 \u6574\u4f53\u67b6\u6784","text":"<p>\u5b8c\u6574\u7684\u53d1\u9001\u6d41\u7a0b\u56fe\u5982\u4e0b:</p> <p></p> <p>\u6574\u4f53\u6d41\u7a0b\u5206\u4e24\u4e2a\u7ebf\u7a0b\u5b8c\u6210\uff0c\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\uff0c\u4e00\u4e2a\u53d1\u9001\u7ebf\u7a0b, 1-5 \u4e3b\u7ebf\u7a0b\u5b8c\u6210 </p> <ol> <li>\u4e3b\u7ebf\u7a0b\u901a\u8fc7 KafkaProducer \u521b\u5efa\u6d88\u606f</li> <li>\u770b\u5ba2\u6237\u7aef\u6709\u6ca1\u6709\u5b9e\u73b0 ProducerIntercepter \u8fd9\u4e2a\u63a5\u53e3\uff0c\u5982\u679c\u6709\u5c31\u5bf9\u6d88\u606f\u8fdb\u884c\u62e6\u622a\u5904\u7406\uff0c\u4e00\u822c\u62e6\u622a\u662f\u4e3a\u4e86\u5bf9\u6d88\u606f\u505a\u7b80\u5355\u5904\u7406\uff0c\u56e0\u4e3a\u592a\u590d\u6742\u4f1a\u5f71\u54cd\u53d1\u9001\u901f\u5ea6\uff0c\u540c\u65f6\u8fd9\u73a9\u610f\u662f\u53ef\u4ee5\u94fe\u5f0f\u7f16\u7a0b\u7684\uff0c\u91cc\u9762\u7684 onSend() \u5728\u53d1\u9001\u524d\u89e6\u53d1, onAcknowleagement() \u5728 Selector \u8fd4\u56de Response \u540e\u9a6c\u4e0a\u89e6\u53d1\uff1f</li> <li>\u5bf9\u6d88\u606f\u7684 key, value \u8fdb\u884c\u5e8f\u5217\u5316\u64cd\u4f5c\uff0c\u8981\u81ea\u5b9a\u4e49\uff0c\u5c31\u5b9e\u73b0 org.apache.kafka.common.serlization.Seralizer \u63a5\u53e3\uff0c configure() \u914d\u7f6e\u5f53\u524d\u7c7b\uff0c serialize(String topic, T data) \u5c31\u662f\u5e8f\u5217\u5316\u65b9\u6cd5\uff0c\u8fd4\u56de byte[], close() \u7528\u6765\u5173\u95ed\u5e8f\u5217\u5316\u5668</li> <li>\u77e5\u9053 Topic \u4e86\uff0c\u5c31\u5f97\u77e5\u9053\u6d88\u606f\u5f80\u54ea\u4e2a\u5206\u533a\u53d1\u4e86\uff0c\u5982\u679c\u6ca1\u6709\u81ea\u5b9a\u4e49\u5206\u533a\u5668\uff0c\u90a3\u4e48\u5c31\u7528\u9ed8\u8ba4\u65b9\u6cd5\u6765\u786e\u5b9a\u53d1\u9001\u7684\u5206\u533a\uff0c\u5982\u679c\u6709\u5c31\u6839\u636e\u81ea\u5b9a\u4e49\u7684\u7ed3\u679c\u786e\u5b9a\u5206\u533a\u53f7</li> <li>\u4e3b\u7ebf\u7a0b\u628a\u6d88\u606f\u7f13\u5b58\u5230\u5bf9\u5e94\u7684 RecordAccumulator \u4e2d\uff0c \u6570\u636e\u7ed3\u6784\u662f Map&lt;Partiion, Deque\\&gt; \uff0cbuffer.memory \u63a7\u5236\u5927\u5c0f\uff0c\u6d88\u606f\u592a\u591a\u4f1a\u963b\u585e\u53d1\u9001\u65b9\u6cd5\uff0c max.block.ms \u63a7\u5236\u963b\u585e\u7b49\u5f85\u65f6\u95f4\uff0cbatch.size \u63a7\u5236 ProducerBatch \u5927\u5c0f <li>Sender \u7ebf\u7a0b\u521b\u5efa Sender \u5bf9\u8c61\uff0c\u628a RecordAccumulator.Map&lt;Partiion, Deque\\&gt; \u8f6c\u6362\u6210 Map&lt;Node, List\\&gt;\uff0c\u6700\u540e\u5c01\u6210  \u5bf9\u8c61 <li> \u8f6c\u6210 Map&lt;NodeId, Deque\\&gt; \u653e\u5230 InFlightRequests \u4e2d, \u8fd9\u73a9\u610f\u662f\u7528\u6765\u8bb0\u5f55\u53d1\u4e86\uff0c\u4f46\u6ca1\u6709\u54cd\u5e94\u7684 Request\uff0c max.in.flight.requests.per.connection \u9ed8\u8ba4\u4e3a5\uff0c\u8868\u793a\u6bcf\u4e2a\u8fde\u63a5\u6700\u5927\u7b49\u5f85\u54cd\u5e94\u7684\u8bf7\u6c42\u6570\u662f5\uff0c\u8d85\u8fc75\u5c31\u4e0d\u80fd\u53d1\u9001\u4e86\u3002\u8fd8\u80fd\u6839\u636e Deque.size() \u6765\u5224\u65ad\u6bcf\u4e2a Node \u7684\u8d1f\u8f7d\u60c5\u51b5"},{"location":"middleware/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Kafka/#222","title":"2.2.2 \u5143\u6570\u636e\u66f4\u65b0","text":"<p>\u5143\u6570\u636e\u6307\u7684\u662f\u5404\u4e2a\u8282\u70b9\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u5305\u62ec\u8282\u70b9\u5730\u5740\u3001\u8282\u70b9\u4e3b\u9898\u3001\u8282\u70b9\u7684\u5206\u533a\u3001\u5206\u533a leader/follower \u526f\u672c\u4fe1\u606f\uff0cAR/ISR, Controller \u8282\u70b9</p> <p>\u4e0a\u8ff0\u7684\u5143\u6570\u636e\u662f\u901a\u8fc7 Sender \u7ebf\u7a0b\u6765\u66f4\u65b0\u7684\uff0c\u66f4\u65b0\u6b65\u9aa4\u5982\u4e0b 1. \u627e\u51fa leastLoadedNode (count \u4e00\u4e0b InFlightRequests.Deque.size()) 2. \u53d1\u9001 MetadataRequest\uff0c\u7136\u540e\u7f13\u5b58\u5230 InFlightRequests"},{"location":"middleware/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Kafka/#23","title":"2.3 \u91cd\u8981\u7684\u751f\u4ea7\u8005\u53c2\u6570","text":"<p>\u8fd9\u4e9b\u53c2\u6570\u90fd\u662f\u5728\u521b\u5efa Producer \u7684\u65f6\u5019\u653e\u5230 props \u91cc\u9762\u7684</p> <ul> <li>ack: <p>          = 1 \u8868\u793a leader \u526f\u672c\u6210\u529f\u5199\u5165\uff0c\u5c31\u4f1a\u6536\u5230\u6765\u81ea\u670d\u52a1\u7aef\u7684\u5199\u5165\u6210\u529f\u54cd\u5e94\uff0c\u6570\u636e\u6709\u53ef\u80fd\u4f1a\u4e22 <p>         = 0 \u8868\u793a\u4e0d\u7528\u7b49\u670d\u52a1\u7aef\u4efb\u4f55\u54cd\u5e94\u3002\u901f\u5ea6\u6700\u5feb\u662f\u5b83\u4e86, \u4f46\u5b83\u6700\u5bb9\u6613\u4e22\u6570\u636e <p>         =-1 \u8868\u793a\u6240\u6709 ISR \u6210\u529f\u5199\u5165\u624d\u8fd4\u56de\u6210\u529f, \u6700\u5927\u53ef\u9760\u6027\u662f\u5b83\u4e86 <li>max.request.size: \u5ba2\u6237\u7aef\u80fd\u53d1\u9001\u6d88\u606f\u7684\u6700\u5927\u503c\uff0c\u9ed8\u8ba4 1048576B=1M\uff0c\u5fc5\u987b &lt;= broker.message.max.size</li> <li>retries: \u751f\u4ea7\u8005\u91cd\u8bd5\u6b21\u6570</li> <li>retry.backoff.ms : \u91cd\u8bd5\u4e4b\u95f4\u7684\u95f4\u9694\uff0c\u9ed8\u8ba4 100</li> <li>compression.type: \u6d88\u606f\u538b\u7f29\u65b9\u5f0f\uff0c\u9ed8\u8ba4 none\uff0c\u53ef\u4ee5\u4e3a gzip snappy lz4</li> <li>connections.max.idle.ms: \u6bcf\u4e2a\u9650\u5236\u8fde\u63a5\u6700\u5927\u5b58\u6d3b\u65f6\u95f4</li> <li>linger.ms: \u53d1\u9001 ProducerBacth \u4e4b\u524d\u7b49\u5f85\u66f4\u591a\u6d88\u606f\u7684\u65f6\u95f4\uff0c\u7528\u6765\u63a7\u5236\u541e\u5410\u91cf\u7684</li> <li>recieve.buffer.byte: \u63a7\u5236 Socket \u63a5\u6536\u7f13\u51b2\u533a\u7684\u5927\u5c0f, \u9ed8\u8ba4\u503c\u662f 32768(B)=32KB</li> <li>send.buffer.byte: \u63a7\u5236 Socket \u53d1\u9001\u7f13\u51b2\u533a\u7684\u5927\u5c0f, \u9ed8\u8ba4\u503c\u662f 131072(B)=128KB</li>"}]}